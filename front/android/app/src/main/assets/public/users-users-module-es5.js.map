{"version":3,"sources":["webpack:///src/app/shared/select-city/select-city.component.html","webpack:///src/app/users/profile/profile.page.html","webpack:///src/app/users/recover-password/recover-password.page.html","webpack:///src/app/users/register-form/register-form.page.html","webpack:///src/app/users/users.page.html","webpack:///src/app/shared/select-city/city.service.ts","webpack:///src/app/shared/select-city/select-city.component.scss","webpack:///src/app/shared/select-city/select-city.component.ts","webpack:///src/app/users/profile/profile.page.scss","webpack:///src/app/users/profile/profile.page.ts","webpack:///src/app/users/recover-password/recover-password.page.scss","webpack:///src/app/users/recover-password/recover-password.page.ts","webpack:///src/app/users/register-form/register-form.page.scss","webpack:///src/app/users/register-form/register-form.page.ts","webpack:///src/app/users/users-routing.module.ts","webpack:///src/app/users/users.module.ts","webpack:///src/app/users/users.page.scss","webpack:///src/app/users/users.page.ts"],"names":["CityService","restService","query","url","undefined","queryGetRegular","providedIn","SelectCityComponent","modalController","cityService","storage","cities","searchForm","queryControl","controls","setValue","city","dismiss","dismissed","value","length","getCities","getAll","toPromise","then","res","result","json","err","error","JSON","parse","_body","console","log","selector","template","ProfilePage","router","alertController","usersService","sanitizer","loadingController","myForm","name","required","email","password","confirmPassword","phone","serviceDescription","get","auth","formData","FormData","uploadImage","webPath","uploadImageImplementation","getPhoto","Photos","ab","Camera","source","quality","allowEditing","resultType","Uri","image","photo","bypassSecurityTrustResourceUrl","create","message","loading","present","fetch","r","blob","append","invalid","Object","keys","forEach","controlName","markAsTouched","body","id","active","deviceToken","username","profilePicture","roles","Blob","stringify","type","update","token","newAuth","set","header","buttons","text","role","handler","alert","component","cssClass","modal","onWillDismiss","response","data","validationType","control","hasError","dirty","touched","RecoverPasswordPage","loginService","showCodeForm","imageUrl","imageId","myCodeForm","code","navigate","userEmail","updateRecoverCode","recoverCode","recoverPassword","login","run","user","updateUser","RegisterFormPage","menuController","step","register","enable","routes","path","loadChildren","m","RecoverPasswordPageModule","RegisterFormPageModule","ProfilePageModule","UsersPageRoutingModule","imports","forChild","exports","UsersPageModule","forRoot","declarations","providers","UsersPage"],"mappings":"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","file":"users-users-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Ciudades</ion-title>\\r\\n    <ion-buttons slot=\\\"primary\\\">\\r\\n      <ion-button (click)=\\\"dismiss()\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n  <form [formGroup]=\\\"searchForm\\\">\\r\\n    <input\\r\\n      name=\\\"query\\\"\\r\\n      type=\\\"text\\\"\\r\\n      class=\\\"form-control\\\"\\r\\n      placeholder=\\\"Busca una ciudad\\\"\\r\\n      formControlName=\\\"queryControl\\\"\\r\\n      (keyup)=\\\"search()\\\"\\r\\n    />\\r\\n  </form>\\r\\n  <div class=\\\"city-list\\\" *ngIf=\\\"cities.length > 0\\\">\\r\\n    <div\\r\\n      class=\\\"select-city\\\"\\r\\n      *ngFor=\\\"let city of cities\\\"\\r\\n      (click)=\\\"dismiss(city)\\\"\\r\\n    >\\r\\n      {{ city.name }}\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>{{ folder }}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <div id=\\\"container\\\">\\r\\n    <h4 class=\\\"centered-text\\\">Perfil</h4>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <img [src]=\\\"photo\\\" />\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-button color=\\\"primary\\\" (click)=\\\"takePicture()\\\" class=\\\"width-100\\\">\\r\\n          <ion-icon name=\\\"camera\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col>\\r\\n        <ion-button color=\\\"primary\\\" (click)=\\\"selectPhoto()\\\" class=\\\"width-100\\\">\\r\\n          <ion-icon name=\\\"image-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\" class=\\\"centered-text\\\"\\r\\n        >Sube una imagen de perfil</ion-col\\r\\n      >\\r\\n      <div class=\\\"separator\\\"></div>\\r\\n    </ion-row>\\r\\n    <ion-row id=\\\"form-container\\\">\\r\\n      <ion-col col-12>\\r\\n        <form [formGroup]=\\\"myForm\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"bold\\\">Nombres y apellidos</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control width-100\\\"\\r\\n              [class.error-input]=\\\"controlHasError('name', 'required')\\\"\\r\\n              formControlName=\\\"name\\\"\\r\\n            />\\r\\n            <span\\r\\n              class=\\\"error-input-label\\\"\\r\\n              *ngIf=\\\"controlHasError('name', 'required')\\\"\\r\\n            >\\r\\n              <strong class=\\\"error\\\">Campo requerido</strong>\\r\\n            </span>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"bold\\\">Correo electr&oacute;nico</label>\\r\\n            <input\\r\\n              type=\\\"email\\\"\\r\\n              class=\\\"form-control width-100\\\"\\r\\n              [class.error-input]=\\\"controlHasError('email', 'required')\\\"\\r\\n              formControlName=\\\"email\\\"\\r\\n            />\\r\\n            <span\\r\\n              class=\\\"error-input-label\\\"\\r\\n              *ngIf=\\\"controlHasError('email', 'required')\\\"\\r\\n            >\\r\\n              <strong class=\\\"error\\\">Campo requerido</strong>\\r\\n            </span>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"bold\\\">Ciudad</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control width-100\\\"              \\r\\n              (click)=\\\"openCityModal()\\\"\\r\\n              [class.error-input]=\\\"controlHasError('city', 'required')\\\"\\r\\n              formControlName=\\\"city\\\"\\r\\n            />\\r\\n            <!-- <ion-item (click)=\\\"openCityModal()\\\" class=\\\"no-padding-left\\\">\\r\\n              <span *ngIf=\\\"!city\\\">Selecciona una ciudad</span>\\r\\n              <span *ngIf=\\\"city\\\">{{city.name}}</span>\\r\\n            </ion-item> -->           \\r\\n            <span\\r\\n              class=\\\"error-input-label\\\"\\r\\n              *ngIf=\\\"controlHasError('city', 'required')\\\"\\r\\n            >\\r\\n              <strong class=\\\"error\\\">Selecciona una ciudad</strong>\\r\\n            </span>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"bold\\\">Tel&eacute;fono(Opcional)</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control width-100\\\"\\r\\n              formControlName=\\\"phone\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"bold\\\">Descripci&oacute;n de tus servicios</label>\\r\\n            <textarea\\r\\n              class=\\\"form-control width-100\\\"\\r\\n              [class.error-input]=\\\"controlHasError('serviceDescription', 'required')\\\"\\r\\n              formControlName=\\\"serviceDescription\\\"\\r\\n            ></textarea>\\r\\n            <span\\r\\n              class=\\\"error-input-label\\\"\\r\\n              *ngIf=\\\"controlHasError('serviceDescription', 'required')\\\"\\r\\n            >\\r\\n              <strong class=\\\"error\\\">Campo requerido</strong>\\r\\n            </span>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"bold\\\">Contrase&ntilde;a</label>\\r\\n            <input\\r\\n              type=\\\"password\\\"\\r\\n              class=\\\"form-control width-100\\\"\\r\\n              [class.error-input]=\\\"controlHasError('password', 'required')\\\"\\r\\n              formControlName=\\\"password\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"bold\\\">Confirmar Contrase&ntilde;a</label>\\r\\n            <input\\r\\n              type=\\\"password\\\"\\r\\n              class=\\\"form-control width-100\\\"\\r\\n              [class.error-input]=\\\"controlHasError('confirmPassword', 'required')\\\"\\r\\n              formControlName=\\\"confirmPassword\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </form>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col col-12>\\r\\n        <ion-button color=\\\"primary\\\" (click)=\\\"updateUser()\\\" class=\\\"width-100\\\">\\r\\n          Actualizar\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-content>\\r\\n  <div id=\\\"container\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col class=\\\"ion-align-self-center\\\" col-8 offset=\\\"2\\\">\\r\\n          <img src=\\\"../../../assets/logo/otoro.png\\\" width=\\\"70%\\\" height=\\\"auto\\\" />\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col col-12 *ngIf=\\\"!showCodeForm\\\">\\r\\n          <h4 class=\\\"no-margin-bottom\\\">Recuperar contrase&ntilde;a</h4>\\r\\n          <small>Por favor ingresa tu correo electrónico</small><br />\\r\\n        </ion-col>\\r\\n        <ion-col col-12 *ngIf=\\\"showCodeForm\\\">\\r\\n          <h4 class=\\\"no-margin-bottom\\\">Ingresar c&oacute;digo</h4>\\r\\n          <small\\r\\n            >Hemos enviado un código a tu correo, por favor ingresalo para\\r\\n            recuperar tu contrase&ntilde;a</small\\r\\n          ><br />\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row id=\\\"form-container\\\">\\r\\n        <ion-col col-12>\\r\\n          <form [formGroup]=\\\"myForm\\\" *ngIf=\\\"!showCodeForm\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"bold\\\">Correo electrónico</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control width-100\\\"\\r\\n                [class.error-input]=\\\"controlHasError('email', 'required')\\\"\\r\\n                formControlName=\\\"email\\\"\\r\\n              />\\r\\n              <span\\r\\n                class=\\\"error-input-label\\\"\\r\\n                *ngIf=\\\"controlHasError('email', 'required')\\\"\\r\\n              >\\r\\n                <strong class=\\\"error\\\">Campo requerido</strong>\\r\\n              </span>\\r\\n            </div>\\r\\n            <div class=\\\"display-flex\\\" id=\\\"btn-container\\\">\\r\\n              <ion-button\\r\\n                color=\\\"danger\\\"\\r\\n                (click)=\\\"cancel()\\\"\\r\\n                class=\\\"margin-center\\\"\\r\\n              >\\r\\n                Cancelar\\r\\n              </ion-button>\\r\\n              <ion-button\\r\\n                color=\\\"primary\\\"\\r\\n                class=\\\"margin-center\\\"\\r\\n                (click)=\\\"updateRecoverCode()\\\"\\r\\n              >\\r\\n                Enviar\\r\\n              </ion-button>\\r\\n            </div>\\r\\n          </form>\\r\\n          <form [formGroup]=\\\"myCodeForm\\\" *ngIf=\\\"showCodeForm\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"bold\\\">Código</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control width-100\\\"\\r\\n                [class.error-input]=\\\"controlHasError('code', 'required')\\\"\\r\\n                formControlName=\\\"code\\\"\\r\\n              />\\r\\n              <span\\r\\n                class=\\\"error-input-label\\\"\\r\\n                *ngIf=\\\"controlHasError('code', 'required')\\\"\\r\\n              >\\r\\n                <strong class=\\\"error\\\">Campo requerido</strong>\\r\\n              </span>\\r\\n            </div>\\r\\n            <div class=\\\"display-flex\\\" id=\\\"btn-container\\\">\\r\\n              <ion-button\\r\\n                color=\\\"danger\\\"\\r\\n                (click)=\\\"cancel()\\\"\\r\\n                class=\\\"margin-center\\\"\\r\\n              >\\r\\n                Cancelar\\r\\n              </ion-button>\\r\\n              <ion-button\\r\\n                color=\\\"primary\\\"\\r\\n                class=\\\"margin-center\\\"\\r\\n                (click)=\\\"recoverPassword()\\\"\\r\\n              >\\r\\n                Validar\\r\\n              </ion-button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-content>\\r\\n  <div id=\\\"container\\\">\\r\\n    <h4 class=\\\"centered-text\\\" *ngIf=\\\"step === 1\\\">Registrarme</h4>\\r\\n    <h4 class=\\\"centered-text\\\" *ngIf=\\\"step !== 1\\\">Casi terminamos</h4>\\r\\n    <ion-row *ngIf=\\\"step !== 1\\\">\\r\\n      <ion-col>\\r\\n        <img [src]=\\\"photo\\\" />\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"step !== 1\\\">\\r\\n      <ion-col>\\r\\n        <ion-button color=\\\"primary\\\" (click)=\\\"takePicture()\\\" class=\\\"width-100\\\">\\r\\n          <ion-icon name=\\\"camera\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col>\\r\\n        <ion-button color=\\\"primary\\\" (click)=\\\"selectPhoto()\\\" class=\\\"width-100\\\">\\r\\n          <ion-icon name=\\\"image-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"step !== 1\\\">\\r\\n      <ion-col size=\\\"12\\\" class=\\\"centered-text\\\"\\r\\n        >Sube una imagen de perfil</ion-col\\r\\n      >\\r\\n      <div class=\\\"separator\\\"></div>\\r\\n    </ion-row>\\r\\n\\r\\n    <ion-row id=\\\"form-container\\\">\\r\\n      <ion-col col-12>\\r\\n        <form [formGroup]=\\\"myForm\\\">\\r\\n          <div class=\\\"form-group\\\" *ngIf=\\\"step === 1\\\">\\r\\n            <label class=\\\"bold\\\">Nombres y apellidos</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control width-100\\\"\\r\\n              [class.error-input]=\\\"controlHasError('name', 'required')\\\"\\r\\n              formControlName=\\\"name\\\"\\r\\n            />\\r\\n            <span\\r\\n              class=\\\"error-input-label\\\"\\r\\n              *ngIf=\\\"controlHasError('name', 'required')\\\"\\r\\n            >\\r\\n              <strong class=\\\"error\\\">Campo requerido</strong>\\r\\n            </span>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" *ngIf=\\\"step === 1\\\">\\r\\n            <label class=\\\"bold\\\">Correo electr&oacute;nico</label>\\r\\n            <input\\r\\n              type=\\\"email\\\"\\r\\n              class=\\\"form-control width-100\\\"\\r\\n              [class.error-input]=\\\"controlHasError('email', 'required')\\\"\\r\\n              formControlName=\\\"email\\\"\\r\\n            />\\r\\n            <span\\r\\n              class=\\\"error-input-label\\\"\\r\\n              *ngIf=\\\"controlHasError('email', 'required')\\\"\\r\\n            >\\r\\n              <strong class=\\\"error\\\">Campo requerido</strong>\\r\\n            </span>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" *ngIf=\\\"step === 1\\\">\\r\\n            <label class=\\\"bold\\\">Ciudad</label>\\r\\n            <ion-item (click)=\\\"openCityModal()\\\">\\r\\n              <span *ngIf=\\\"!city\\\">Selecciona una ciudad</span>\\r\\n              <span *ngIf=\\\"city\\\">{{city.name}}</span>\\r\\n            </ion-item>\\r\\n            <input type=\\\"text\\\" class=\\\"display-none\\\" formControlName=\\\"city\\\" />\\r\\n            <span\\r\\n              class=\\\"error-input-label\\\"\\r\\n              *ngIf=\\\"controlHasError('city', 'required') && step === 1\\\"\\r\\n            >\\r\\n              <strong class=\\\"error\\\">Selecciona una ciudad</strong>\\r\\n            </span>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" *ngIf=\\\"step === 1\\\">\\r\\n            <label class=\\\"bold\\\">Tel&eacute;fono(Opcional)</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control width-100\\\"\\r\\n              formControlName=\\\"phone\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" *ngIf=\\\"step === 1\\\">\\r\\n            <label class=\\\"bold\\\">Contrase&ntilde;a</label>\\r\\n            <input\\r\\n              type=\\\"password\\\"\\r\\n              class=\\\"form-control width-100\\\"\\r\\n              [class.error-input]=\\\"controlHasError('password', 'required')\\\"\\r\\n              formControlName=\\\"password\\\"\\r\\n            />\\r\\n            <span\\r\\n              class=\\\"error-input-label\\\"\\r\\n              *ngIf=\\\"controlHasError('password', 'required')\\\"\\r\\n            >\\r\\n              <strong class=\\\"error\\\">Campo requerido</strong>\\r\\n            </span>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" *ngIf=\\\"step === 1\\\">\\r\\n            <label class=\\\"bold\\\">Confirmar Contrase&ntilde;a</label>\\r\\n            <input\\r\\n              type=\\\"password\\\"\\r\\n              class=\\\"form-control width-100\\\"\\r\\n              [class.error-input]=\\\"controlHasError('confirmPassword', 'required')\\\"\\r\\n              formControlName=\\\"confirmPassword\\\"\\r\\n            />\\r\\n            <span\\r\\n              class=\\\"error-input-label\\\"\\r\\n              *ngIf=\\\"controlHasError('confirmPassword', 'required')\\\"\\r\\n            >\\r\\n              <strong class=\\\"error\\\">Campo requerido</strong>\\r\\n            </span>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" *ngIf=\\\"step !== 1\\\">\\r\\n            <label class=\\\"bold\\\">Descripci&oacute;n de tus servicios</label>\\r\\n            <textarea\\r\\n              class=\\\"form-control width-100\\\"\\r\\n              [class.error-input]=\\\"controlHasError('serviceDescription', 'required')\\\"\\r\\n              formControlName=\\\"serviceDescription\\\"\\r\\n            ></textarea>\\r\\n            <span\\r\\n              class=\\\"error-input-label\\\"\\r\\n              *ngIf=\\\"controlHasError('serviceDescription', 'required')\\\"\\r\\n            >\\r\\n              <strong class=\\\"error\\\">Campo requerido</strong>\\r\\n            </span>\\r\\n          </div>\\r\\n        </form>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col col-12>\\r\\n        <ion-button\\r\\n          color=\\\"primary\\\"\\r\\n          (click)=\\\"continueToSecondStep()\\\"\\r\\n          class=\\\"width-100\\\"\\r\\n          *ngIf=\\\"step === 1\\\"\\r\\n        >\\r\\n          Continuar\\r\\n        </ion-button>\\r\\n        <ion-button\\r\\n          color=\\\"primary\\\"\\r\\n          (click)=\\\"register()\\\"\\r\\n          class=\\\"width-100\\\"\\r\\n          *ngIf=\\\"step !== 1\\\"\\r\\n        >\\r\\n          Guardar\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col col-12>\\r\\n        <ion-button\\r\\n          color=\\\"danger\\\"\\r\\n          (click)=\\\"cancel()\\\"\\r\\n          class=\\\"width-100\\\"\\r\\n          *ngIf=\\\"step === 1\\\"\\r\\n        >\\r\\n          Cancelar\\r\\n        </ion-button>\\r\\n        <ion-button\\r\\n          color=\\\"danger\\\"\\r\\n          (click)=\\\"goBackToFirstStep()\\\"\\r\\n          class=\\\"width-100\\\"\\r\\n          *ngIf=\\\"step !== 1\\\"\\r\\n        >\\r\\n          Volver\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>users</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n</ion-content>\\r\\n\";","import { Injectable } from \"@angular/core\";\r\nimport { RestService } from \"src/app/core/services/rest.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CityService {\r\n  constructor(private restService: RestService) {}\r\n\r\n  getAll(query: string) {\r\n    let url = `cities${\r\n      undefined != query && null != query && \"\" != query\r\n        ? `?query=${query}`\r\n        : ``\r\n    }`;\r\n    return this.restService.queryGetRegular(url);\r\n  }\r\n}\r\n","export default \".city-list {\\n  padding-top: 5%;\\n}\\n\\n.city-list .select-city {\\n  border-bottom: 1px #e6e6e6 solid;\\n  padding: 5px 0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3NlbGVjdC1jaXR5L0M6XFxVc2Vyc1xcaW5nZG1cXHByb2plY3RzXFxvdG9yb1xcZnJvbnQvc3JjXFxhcHBcXHNoYXJlZFxcc2VsZWN0LWNpdHlcXHNlbGVjdC1jaXR5LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zaGFyZWQvc2VsZWN0LWNpdHkvc2VsZWN0LWNpdHkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0FDQ2pCOztBREZBO0VBR0ksZ0NBQWdDO0VBQ2hDLGNBQWM7QUNHbEIiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvc2VsZWN0LWNpdHkvc2VsZWN0LWNpdHkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2l0eS1saXN0IHtcclxuICBwYWRkaW5nLXRvcDogNSU7XHJcbiAgLnNlbGVjdC1jaXR5IHtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCAjZTZlNmU2IHNvbGlkO1xyXG4gICAgcGFkZGluZzogNXB4IDA7XHJcbiAgfVxyXG59XHJcbiIsIi5jaXR5LWxpc3Qge1xuICBwYWRkaW5nLXRvcDogNSU7XG59XG5cbi5jaXR5LWxpc3QgLnNlbGVjdC1jaXR5IHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4ICNlNmU2ZTYgc29saWQ7XG4gIHBhZGRpbmc6IDVweCAwO1xufVxuIl19 */\";","import { Component, OnInit } from \"@angular/core\";\r\nimport { ModalController } from \"@ionic/angular\";\r\nimport { Storage } from \"@ionic/storage\";\r\nimport { CityService } from \"./city.service\";\r\nimport { FormGroup, FormControl } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-select-city\",\r\n  templateUrl: \"./select-city.component.html\",\r\n  styleUrls: [\"./select-city.component.scss\"],\r\n})\r\nexport class SelectCityComponent implements OnInit {  \r\n  private cities: any[] = [];\r\n  private query: string = \"\";\r\n  public searchForm: FormGroup;\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private cityService: CityService,\r\n    private storage: Storage\r\n  ) {}\r\n\r\n  ngOnInit() {    \r\n    this.searchForm = new FormGroup({\r\n      queryControl: new FormControl(\"queryControl\", []),\r\n    });\r\n    this.searchForm.controls[\"queryControl\"].setValue(null);\r\n  }\r\n\r\n  dismiss(city: any = undefined) {\r\n    this.modalController.dismiss({\r\n      dismissed: true,\r\n      city: city,\r\n    });\r\n  }\r\n\r\n  search() {\r\n    let controls = this.searchForm.controls;\r\n    this.query = controls[\"queryControl\"].value;\r\n    if (this.query && this.query.length > 3) {\r\n      this.getCities();\r\n    } else {\r\n      this.cities = [];\r\n    }\r\n  }\r\n\r\n  getCities() {\r\n    this.cityService\r\n      .getAll(this.query)\r\n      .toPromise()\r\n      .then(\r\n        (res) => {\r\n          const result = res.json();\r\n          this.cities = result;\r\n        },\r\n        (err) => {\r\n          let error = JSON.parse(err._body);\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { SafeResourceUrl, DomSanitizer } from \"@angular/platform-browser\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Storage } from \"@ionic/storage\";\r\nimport {\r\n  ModalController,\r\n  LoadingController,\r\n  AlertController,\r\n} from \"@ionic/angular\";\r\nimport { UsersService } from \"../users.service\";\r\nimport { CameraSource, Plugins, CameraResultType } from \"@capacitor/core\";\r\nimport { SelectCityComponent } from \"src/app/shared/select-city/select-city.component\";\r\n\r\n@Component({\r\n  selector: \"app-profile\",\r\n  templateUrl: \"./profile.page.html\",\r\n  styleUrls: [\"./profile.page.scss\"],\r\n})\r\nexport class ProfilePage implements OnInit {\r\n  private auth: any;\r\n  private city: any;\r\n  private formData: FormData;\r\n  private imageResponse: any;\r\n  private loading: any;\r\n  private myForm: FormGroup;\r\n  private photo: SafeResourceUrl;\r\n  private uploadImage: (webPatth: string) => void;\r\n  constructor(\r\n    private router: Router,\r\n    private alertController: AlertController,\r\n    private storage: Storage,\r\n    private modalController: ModalController,\r\n    private usersService: UsersService,\r\n    private sanitizer: DomSanitizer,\r\n    private loadingController: LoadingController\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.myForm = new FormGroup({\r\n      name: new FormControl(\"name\", [Validators.required]),\r\n      city: new FormControl(\"city\", [Validators.required]),\r\n      email: new FormControl(\"email\", [Validators.required]),\r\n      password: new FormControl(\"password\", []),\r\n      confirmPassword: new FormControl(\"confirmPassword\", []),\r\n      phone: new FormControl(\"phone\", []),\r\n      serviceDescription: new FormControl(\"serviceDescription\", []),\r\n    });\r\n\r\n    this.myForm.controls[\"name\"].setValue(null);\r\n    this.myForm.controls[\"city\"].setValue(null);\r\n    this.myForm.controls[\"phone\"].setValue(null);\r\n    this.myForm.controls[\"serviceDescription\"].setValue(null);\r\n    this.myForm.controls[\"email\"].setValue(null);\r\n    this.myForm.controls[\"password\"].setValue(null);\r\n    this.myForm.controls[\"confirmPassword\"].setValue(null);\r\n\r\n    this.storage.get(\"auth\").then((auth) => {\r\n      this.auth = auth;\r\n      this.myForm.controls[\"name\"].setValue(auth.name);\r\n      this.myForm.controls[\"city\"].setValue(auth.city.name);\r\n      this.city = auth.city;\r\n      this.myForm.controls[\"phone\"].setValue(auth.phone);\r\n      this.myForm.controls[\"serviceDescription\"].setValue(\r\n        auth.serviceDescription\r\n      );\r\n      this.myForm.controls[\"email\"].setValue(auth.email);\r\n    });\r\n\r\n    this.formData = new FormData();\r\n\r\n    this.uploadImage = (webPath: string) => {\r\n      this.uploadImageImplementation(webPath);\r\n    };\r\n  }\r\n\r\n  async selectPhoto() {\r\n    const ab = await this.getPhoto(CameraSource.Photos);\r\n    await this.uploadImage(ab);\r\n  }\r\n\r\n  async takePicture() {\r\n    const ab = await this.getPhoto(CameraSource.Camera);\r\n    await this.uploadImage(ab);\r\n  }\r\n\r\n  private async getPhoto(source: CameraSource) {\r\n    const image = await Plugins.Camera.getPhoto({\r\n      quality: 90,\r\n      allowEditing: false,\r\n      resultType: CameraResultType.Uri,\r\n      source,\r\n    });\r\n\r\n    this.photo = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n      image && image.webPath\r\n    );\r\n    return image.webPath;\r\n  }\r\n\r\n  private async uploadImageImplementation(webPath: string) {\r\n    this.loading = await this.loadingController.create({\r\n      message: \"Cargando...\",\r\n    });\r\n    await this.loading.present();\r\n\r\n    const blob = await fetch(webPath).then((r) => r.blob());\r\n    this.formData.append(\"image\", blob, `profile-picture.jpg`);\r\n    await this.loading.dismiss(\"login\");\r\n  }\r\n\r\n  async updateUser() {\r\n    this.loading = await this.loadingController.create({\r\n      message: \"Cargando...\",\r\n    });\r\n    let controls = this.myForm.controls;\r\n    if (this.myForm.invalid) {\r\n      Object.keys(controls).forEach((controlName) =>\r\n        controls[controlName].markAsTouched()\r\n      );\r\n      return;\r\n    }\r\n\r\n    let body = {\r\n      id: this.auth.id,\r\n      active: 1,\r\n      deviceToken: this.auth.deviceToken,\r\n      email: controls[\"email\"].value,\r\n      name: controls[\"name\"].value,\r\n      phone: controls[\"phone\"].value,\r\n      serviceDescription: controls[\"serviceDescription\"].value,\r\n      password: controls[\"password\"].value,\r\n      username: controls[\"email\"].value,\r\n      profilePicture: this.auth.profilePicture,\r\n      city: this.city,\r\n      roles: [{ id: 2 }],\r\n    };\r\n\r\n    this.formData.append(\r\n      \"userCommand\",\r\n      new Blob([JSON.stringify(body)], {\r\n        type: \"application/json\",\r\n      })\r\n    );\r\n    this.loading.present();\r\n    this.usersService\r\n      .update(this.formData, this.auth.token)\r\n      .toPromise()\r\n      .then(\r\n        async (res) => {\r\n          this.loading.dismiss();\r\n          let newAuth = { ...body, token: this.auth.token };\r\n          this.storage.set(\"auth\", newAuth);\r\n\r\n          let alert = await this.alertController.create({\r\n            header: \"Perfil actualizado\",\r\n            message: \"Tu perfil ha sido actualizado correctamente\",\r\n            buttons: [\r\n              {\r\n                text: \"Aceptar\",\r\n                role: \"cancel\",\r\n                handler: () => {\r\n                  return false;\r\n                },\r\n              },\r\n            ],\r\n          });\r\n          alert.present();\r\n        },\r\n        (err) => {\r\n          this.loading.dismiss();\r\n          let error = JSON.parse(err._body);\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  async openCityModal() {\r\n    const modal = await this.modalController.create({\r\n      component: SelectCityComponent,\r\n      cssClass: \"my-custom-class\",\r\n    });\r\n\r\n    return await modal.present().then(() => {\r\n      modal.onWillDismiss().then((response: any) => {\r\n        this.city = response.data.city;\r\n        if (this.city) {\r\n          this.myForm.controls[\"city\"].setValue(this.city.name);\r\n        } else {\r\n          this.myForm.controls[\"city\"].setValue(null);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public controlHasError(controlName: string, validationType: string): boolean {\r\n    const control = this.myForm.controls[controlName];\r\n    if (!control) {\r\n      return false;\r\n    }\r\n\r\n    const result =\r\n      control.hasError(validationType) && (control.dirty || control.touched);\r\n\r\n    return result;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3JlY292ZXItcGFzc3dvcmQvcmVjb3Zlci1wYXNzd29yZC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Storage } from \"@ionic/storage\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { UsersService } from \"../users.service\";\r\nimport { LoginService } from \"src/app/login/form/login.service\";\r\nimport { LoadingController } from \"@ionic/angular\";\r\n\r\n@Component({\r\n  selector: \"app-recover-password\",\r\n  templateUrl: \"./recover-password.page.html\",\r\n  styleUrls: [\"./recover-password.page.scss\"],\r\n})\r\nexport class RecoverPasswordPage implements OnInit {\r\n  private loading: any;\r\n  private formData: FormData;\r\n  public imageId: string;\r\n  public imageUrl: string;\r\n  public myCodeForm: FormGroup;\r\n  public myForm: FormGroup;\r\n  public showCodeForm: boolean;\r\n  public userEmail: string;\r\n  constructor(\r\n    private router: Router,\r\n    public storage: Storage,\r\n    private usersService: UsersService,\r\n    private loginService: LoginService,\r\n    private loadingController: LoadingController\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.formData = new FormData();\r\n    this.showCodeForm = false;\r\n    this.imageUrl = \"../../assets/logo/otoro-logo.png\";\r\n    this.imageId = \"top-image\";\r\n    this.myForm = new FormGroup({\r\n      email: new FormControl(\"email\", [Validators.required]),\r\n    });\r\n    this.myForm.controls[\"email\"].setValue(null);\r\n    this.myCodeForm = new FormGroup({\r\n      code: new FormControl(\"code\", [Validators.required]),\r\n    });\r\n    this.myCodeForm.controls[\"code\"].setValue(null);\r\n  }\r\n\r\n  cancel() {\r\n    this.showCodeForm = false;\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n\r\n  async updateRecoverCode() {\r\n    let controls = this.myForm.controls;\r\n    if (this.myForm.invalid) {\r\n      Object.keys(controls).forEach((controlName) =>\r\n        controls[controlName].markAsTouched()\r\n      );\r\n      return;\r\n    }\r\n\r\n    const body = {\r\n      email: controls[\"email\"].value,\r\n    };\r\n\r\n    this.userEmail = controls[\"email\"].value;\r\n\r\n    this.loading = await this.loadingController.create({\r\n      message: \"Cargando...\",\r\n    });\r\n    await this.loading.present();\r\n    this.usersService\r\n      .updateRecoverCode(body)\r\n      .toPromise()\r\n      .then(\r\n        async (res) => {\r\n          this.showCodeForm = true;\r\n          await this.loading.dismiss();\r\n        },\r\n        async (err) => {\r\n          let error = JSON.parse(err._body);\r\n          console.log(error);\r\n          await this.loading.dismiss();\r\n        }\r\n      );\r\n  }\r\n\r\n  async recoverPassword() {\r\n    let controls = this.myCodeForm.controls;\r\n    if (this.myCodeForm.invalid) {\r\n      Object.keys(controls).forEach((controlName) =>\r\n        controls[controlName].markAsTouched()\r\n      );\r\n      return;\r\n    }\r\n\r\n    const body = {\r\n      email: this.userEmail,\r\n      recoverCode: controls[\"code\"].value,\r\n    };\r\n\r\n    this.loading = await this.loadingController.create({\r\n      message: \"Cargando...\",\r\n    });\r\n    await this.loading.present();\r\n\r\n    this.usersService\r\n      .recoverPassword(body)\r\n      .toPromise()\r\n      .then(\r\n        async (res) => {\r\n          this.login();\r\n        },\r\n        async (err) => {\r\n          let error = JSON.parse(err._body);\r\n          console.log(error);\r\n          await this.loading.dismiss();\r\n        }\r\n      );\r\n  }\r\n\r\n  login() {\r\n    let controls = this.myCodeForm.controls;\r\n\r\n    const body = {\r\n      email: this.userEmail,\r\n      password: controls[\"code\"].value,\r\n    };\r\n\r\n    this.loginService\r\n      .run(body)\r\n      .toPromise()\r\n      .then(\r\n        async (res) => {\r\n          this.showCodeForm = false;\r\n          this.myForm.controls[\"email\"].setValue(null);\r\n          this.myCodeForm.controls[\"code\"].setValue(null);\r\n\r\n          let result = res.json();\r\n          let deviceToken = await this.storage.get(\"deviceToken\");\r\n          this.storage.set(\"auth\", result);\r\n          let user = {\r\n            id: result.id,\r\n            deviceToken: deviceToken,\r\n            active: result.active,\r\n            email: result.email,\r\n            name: result.name,\r\n            phone: result.phone,\r\n            profilePicture: result.profilePicture,\r\n            serviceDescription: result.serviceDescription,\r\n            password: \"\",\r\n            username: result.email,\r\n            city: result.city,\r\n            roles: result.roles,\r\n          };\r\n          this.formData.append(\r\n            \"userCommand\",\r\n            new Blob([JSON.stringify(user)], {\r\n              type: \"application/json\",\r\n            })\r\n          );\r\n          this.updateUser(result.token);\r\n        },\r\n        async (err) => {\r\n          let error = JSON.parse(err._body);\r\n          console.log(error);\r\n          await this.loading.dismiss();\r\n        }\r\n      );\r\n  }\r\n\r\n  updateUser(token: string) {\r\n    this.usersService\r\n      .update(this.formData, token)\r\n      .toPromise()\r\n      .then(\r\n        async (res) => {\r\n          await this.loading.dismiss();\r\n          this.router.navigate([\"/dashboard\"]);\r\n        },\r\n        async (err) => {\r\n          await this.loading.dismiss();\r\n          let error = JSON.parse(err._body);\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  public controlHasError(controlName: string, validationType: string): boolean {\r\n    let control = this.myForm.controls[controlName];\r\n    if (this.showCodeForm) {\r\n      control = this.myCodeForm.controls[controlName];\r\n    }\r\n    if (!control) {\r\n      return false;\r\n    }\r\n\r\n    const result =\r\n      control.hasError(validationType) && (control.dirty || control.touched);\r\n\r\n    return result;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3JlZ2lzdGVyLWZvcm0vcmVnaXN0ZXItZm9ybS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Storage } from \"@ionic/storage\";\r\nimport {\r\n  ModalController,\r\n  LoadingController,\r\n  MenuController,\r\n} from \"@ionic/angular\";\r\nimport {\r\n  Plugins,\r\n  CameraResultType,\r\n  CameraSource,\r\n  Camera,\r\n} from \"@capacitor/core\";\r\nimport { SelectCityComponent } from \"src/app/shared/select-city/select-city.component\";\r\nimport { UsersService } from \"../users.service\";\r\nimport { LoginService } from \"src/app/login/form/login.service\";\r\nimport { SafeResourceUrl, DomSanitizer } from \"@angular/platform-browser\";\r\n\r\n@Component({\r\n  selector: \"app-register-form\",\r\n  templateUrl: \"./register-form.page.html\",\r\n  styleUrls: [\"./register-form.page.scss\"],\r\n})\r\nexport class RegisterFormPage implements OnInit {\r\n  private city: any;\r\n  private formData: FormData;\r\n  private imageResponse: any;\r\n  private loading: any;\r\n  private myForm: FormGroup;\r\n  private options: any;\r\n  private photo: SafeResourceUrl;\r\n  private step: number = 1;\r\n  private uploadImage: (webPatth: string) => void;\r\n  constructor(\r\n    private router: Router,\r\n    private storage: Storage,\r\n    private modalController: ModalController,\r\n    private usersService: UsersService,\r\n    private loginService: LoginService,\r\n    private sanitizer: DomSanitizer,\r\n    private loadingController: LoadingController,\r\n    private menuController: MenuController\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.myForm = new FormGroup({\r\n      name: new FormControl(\"name\", [Validators.required]),\r\n      city: new FormControl(\"city\", [Validators.required]),\r\n      email: new FormControl(\"email\", [Validators.required]),\r\n      password: new FormControl(\"password\", [Validators.required]),\r\n      confirmPassword: new FormControl(\"confirmPassword\", [\r\n        Validators.required,\r\n      ]),\r\n      phone: new FormControl(\"phone\", []),\r\n      serviceDescription: new FormControl(\"serviceDescription\", []),\r\n    });\r\n\r\n    this.myForm.controls[\"name\"].setValue(null);\r\n    this.myForm.controls[\"city\"].setValue(null);\r\n    this.myForm.controls[\"phone\"].setValue(null);\r\n    this.myForm.controls[\"serviceDescription\"].setValue(null);\r\n    this.myForm.controls[\"email\"].setValue(null);\r\n    this.myForm.controls[\"password\"].setValue(null);\r\n    this.myForm.controls[\"confirmPassword\"].setValue(null);\r\n\r\n    this.formData = new FormData();\r\n\r\n    this.uploadImage = (webPath: string) => {\r\n      this.uploadImageImplementation(webPath);\r\n    };\r\n  }\r\n\r\n  async selectPhoto() {\r\n    const ab = await this.getPhoto(CameraSource.Photos);\r\n    await this.uploadImage(ab);\r\n  }\r\n\r\n  async takePicture() {\r\n    const ab = await this.getPhoto(CameraSource.Camera);\r\n    await this.uploadImage(ab);\r\n  }\r\n\r\n  private async getPhoto(source: CameraSource) {\r\n    const image = await Plugins.Camera.getPhoto({\r\n      quality: 90,\r\n      allowEditing: false,\r\n      resultType: CameraResultType.Uri,\r\n      source,\r\n    });\r\n\r\n    this.photo = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n      image && image.webPath\r\n    );\r\n    return image.webPath;\r\n  }\r\n\r\n  private async uploadImageImplementation(webPath: string) {\r\n    this.loading = await this.loadingController.create({\r\n      message: \"Cargando...\",\r\n    });\r\n    await this.loading.present();\r\n\r\n    const blob = await fetch(webPath).then((r) => r.blob());\r\n    this.formData.append(\"image\", blob, `profile-picture.jpg`);\r\n    await this.loading.dismiss(\"login\");\r\n  }\r\n\r\n  continueToSecondStep() {\r\n    this.step = 2;\r\n  }\r\n\r\n  goBackToFirstStep() {\r\n    this.step = 1;\r\n  }\r\n\r\n  cancel() {\r\n    this.step = 1;\r\n    this.myForm.controls[\"name\"].setValue(null);\r\n    this.myForm.controls[\"city\"].setValue(null);\r\n    this.myForm.controls[\"phone\"].setValue(null);\r\n    this.myForm.controls[\"serviceDescription\"].setValue(null);\r\n    this.myForm.controls[\"email\"].setValue(null);\r\n    this.myForm.controls[\"password\"].setValue(null);\r\n    this.myForm.controls[\"confirmPassword\"].setValue(null);\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n\r\n  async register() {\r\n    this.loading = await this.loadingController.create({\r\n      message: \"Cargando...\",\r\n    });\r\n    let controls = this.myForm.controls;\r\n    if (this.myForm.invalid) {\r\n      Object.keys(controls).forEach((controlName) =>\r\n        controls[controlName].markAsTouched()\r\n      );\r\n      return;\r\n    }\r\n\r\n    const body = {\r\n      active: 1,\r\n      email: controls[\"email\"].value,\r\n      name: controls[\"name\"].value,\r\n      phone: controls[\"phone\"].value,\r\n      serviceDescription: controls[\"serviceDescription\"].value,\r\n      password: controls[\"password\"].value,\r\n      username: controls[\"email\"].value,\r\n      city: this.city,\r\n      roles: [{ id: 2 }],\r\n    };\r\n    this.formData.append(\r\n      \"userCommand\",\r\n      new Blob([JSON.stringify(body)], {\r\n        type: \"application/json\",\r\n      })\r\n    );\r\n    this.loading.present();\r\n    this.usersService\r\n      .register(this.formData)\r\n      .toPromise()\r\n      .then(\r\n        async (res) => {\r\n          this.login();\r\n        },\r\n        (err) => {\r\n          this.loading.dismiss();\r\n          let error = JSON.parse(err._body);\r\n        }\r\n      );\r\n  }\r\n\r\n  login() {\r\n    let controls = this.myForm.controls;\r\n\r\n    const body = {\r\n      email: controls[\"email\"].value,\r\n      password: controls[\"password\"].value,\r\n    };\r\n\r\n    this.loginService\r\n      .run(body)\r\n      .toPromise()\r\n      .then(\r\n        async (res) => {\r\n          let result = res.json();\r\n          let deviceToken = await this.storage.get(\"deviceToken\");\r\n          this.storage.set(\"auth\", result);\r\n          let user = {\r\n            active: result.active,\r\n            deviceToken: deviceToken,\r\n            email: result.email,\r\n            id: result.id,\r\n            profilePicture: result.profilePicture,\r\n            name: result.name,\r\n            serviceDescription: result.serviceDescription,\r\n            phone: result.phone,\r\n            roles: result.roles,\r\n            city: result.city,\r\n          };\r\n\r\n          this.formData.set(\r\n            \"userCommand\",\r\n            new Blob([JSON.stringify(user)], {\r\n              type: \"application/json\",\r\n            })\r\n          );\r\n          this.updateUser(result.token);\r\n        },\r\n        (err) => {\r\n          this.loading.dismiss();\r\n          let error = JSON.parse(err._body);\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  updateUser(token: string) {\r\n    this.usersService\r\n      .update(this.formData, token)\r\n      .toPromise()\r\n      .then(\r\n        async (res) => {\r\n          this.menuController.enable(true);\r\n          this.loading.dismiss();\r\n          this.router.navigate([\"/dashboard\"]);\r\n        },\r\n        (err) => {\r\n          this.loading.dismiss();\r\n          let error = JSON.parse(err._body);\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  async openCityModal() {\r\n    const modal = await this.modalController.create({\r\n      component: SelectCityComponent,\r\n      cssClass: \"my-custom-class\",\r\n    });\r\n\r\n    return await modal.present().then(() => {\r\n      modal.onWillDismiss().then((response: any) => {\r\n        this.city = response.data.city;\r\n        if (this.city) {\r\n          this.myForm.controls[\"city\"].setValue(this.city.name);\r\n        } else {\r\n          this.myForm.controls[\"city\"].setValue(null);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public controlHasError(controlName: string, validationType: string): boolean {\r\n    const control = this.myForm.controls[controlName];\r\n    if (!control) {\r\n      return false;\r\n    }\r\n\r\n    const result =\r\n      control.hasError(validationType) && (control.dirty || control.touched);\r\n\r\n    return result;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UsersPage } from './users.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UsersPage\r\n  },\r\n  {\r\n    path: 'recover-password',\r\n    loadChildren: () => import('./recover-password/recover-password.module').then( m => m.RecoverPasswordPageModule)\r\n  },\r\n  {\r\n    path: 'register',\r\n    loadChildren: () => import('./register-form/register-form.module').then( m => m.RegisterFormPageModule)\r\n  },\r\n  {\r\n    path: 'profile',\r\n    loadChildren: () => import('./profile/profile.module').then( m => m.ProfilePageModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UsersPageRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n\r\nimport { IonicModule } from \"@ionic/angular\";\r\n\r\nimport { UsersPageRoutingModule } from \"./users-routing.module\";\r\n\r\nimport { UsersPage } from \"./users.page\";\r\nimport { UsersService } from \"./users.service\";\r\nimport { IonicStorageModule } from \"@ionic/storage\";\r\nimport { RecoverPasswordPage } from \"./recover-password/recover-password.page\";\r\nimport { RegisterFormPage } from \"./register-form/register-form.page\";\r\nimport { ProfilePage } from './profile/profile.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    UsersPageRoutingModule,\r\n    IonicStorageModule.forRoot(),\r\n  ],\r\n  declarations: [UsersPage, RecoverPasswordPage, RegisterFormPage,ProfilePage],\r\n  providers: [UsersService],\r\n})\r\nexport class UsersPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.page.html',\r\n  styleUrls: ['./users.page.scss'],\r\n})\r\nexport class UsersPage implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n"]}