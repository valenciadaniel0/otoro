{"version":3,"sources":["webpack:///src/app/shared/card/card.component.html","webpack:///src/app/shared/image/image.component.html","webpack:///src/app/shared/post-card/post-card.component.html","webpack:///src/app/shared/select-city/select-city.component.html","webpack:///src/app/core/services/rest.service.ts","webpack:///src/app/shared/card/card.component.scss","webpack:///src/app/shared/card/card.component.ts","webpack:///src/app/shared/image/image.component.scss","webpack:///src/app/shared/image/image.component.ts","webpack:///src/app/shared/post-card/post-card.component.scss","webpack:///src/app/shared/post-card/post-card.component.ts","webpack:///src/app/shared/select-city/city.service.ts","webpack:///src/app/shared/select-city/select-city.component.scss","webpack:///src/app/shared/select-city/select-city.component.ts","webpack:///src/app/shared/shared.module.ts"],"names":["RestService","http","apiUrl","api_url","route","body","repos","post","concat","token","headers","Authorization","options","get","localStorage","getItem","providedIn","CardComponent","selector","template","ImageComponent","PostCardComponent","CityService","restService","query","url","undefined","queryGet","SelectCityComponent","modalController","cityService","storage","auth","cities","then","searchForm","queryControl","controls","setValue","city","dismiss","dismissed","value","length","getCities","getAll","toPromise","res","result","json","err","error","JSON","parse","_body","console","log","SharedModule","declarations","imports","exports"],"mappings":"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","file":"default~dashboard-dashboard-module~login-login-module~posts-posts-module-es5.js","sourcesContent":["export default \"<ion-card (click)=\\\"action()\\\">\\r\\n  <ion-card-header>\\r\\n    <ion-card-subtitle class=\\\"centered-text black-text\\\">{{text}}</ion-card-subtitle>\\r\\n  </ion-card-header>\\r\\n</ion-card>\\r\\n\";","export default \"<img [src]=\\\"url\\\" [className]=\\\"class\\\"  />\";","export default \"<div class=\\\"post-card\\\">\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"4\\\">\\n        <app-image [url]=\\\"imageSrc\\\" class=\\\"post-image\\\"></app-image>\\n      </ion-col>\\n      <ion-col size=\\\"8\\\">\\n        <h4 class=\\\"post-title\\\">{{ title }}</h4>\\n        <div class=\\\"post-details\\\" *ngIf=\\\"type === 1\\\">\\n          <span><ion-icon name=\\\"calendar\\\"></ion-icon>{{ date }}</span>\\n        </div>\\n        <div class=\\\"post-details\\\" *ngIf=\\\"type === 2\\\">\\n          <span><ion-icon name=\\\"pricetag\\\"></ion-icon>{{ price }}</span>\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</div>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Modal Header</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button (click)=\\\"dismiss()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"ion-padding\\\">\\n  <form [formGroup]=\\\"searchForm\\\">\\n    <ion-item>\\n      <input\\n        name=\\\"query\\\"\\n        type=\\\"text\\\"\\n        class=\\\"form-control\\\"\\n        placeholder=\\\"Busca una ciudad\\\"\\n        formControlName=\\\"queryControl\\\"\\n        (keyup)=\\\"search()\\\"\\n      />\\n    </ion-item>\\n  </form>\\n  <div class=\\\"city-list\\\" *ngIf=\\\"cities.length > 0\\\">\\n    <div\\n      class=\\\"select-city\\\"\\n      *ngFor=\\\"let city of cities\\\"\\n      (click)=\\\"dismiss(city)\\\"\\n    >\\n      {{ city.name }}\\n    </div>\\n  </div>\\n</ion-content>\\n\";","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { Http, Headers, RequestOptions } from \"@angular/http\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class RestService {\r\n  public apiUrl: string = environment.api_url;\r\n  constructor(private http: Http) {}\r\n\r\n  queryPostRegular(route: string, body: any) {\r\n    let repos = this.http.post(this.apiUrl.concat(route), body);\r\n    return repos;\r\n  }\r\n\r\n  queryDeleteRegular(route: string) {\r\n    let repos = this.http.delete(this.apiUrl.concat(route));\r\n    return repos;\r\n  }\r\n\r\n  queryGet(route: string, token: string) {\r\n    let headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let repos = this.http.get(this.apiUrl.concat(route), options);\r\n    return repos;\r\n  }\r\n\r\n  queryPost(route: string, body: any, token: string) {\r\n    let headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let repos = this.http.post(this.apiUrl.concat(route), body, options);\r\n    return repos;\r\n  }\r\n\r\n  queryDelete(route: string) {\r\n    let token = localStorage.getItem(\"token\");\r\n    let headers = new Headers({ Authorization: token });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let repos = this.http.delete(this.apiUrl.concat(route), options);\r\n    return repos;\r\n  }\r\n\r\n  queryExternalApi(route) {\r\n    let repos = this.http.get(this.apiUrl.concat(route));\r\n    return repos;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jYXJkL2NhcmQuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-card\",\r\n  templateUrl: \"./card.component.html\",\r\n  styleUrls: [\"./card.component.scss\"],\r\n})\r\nexport class CardComponent implements OnInit {\r\n  @Input() text: string;\r\n  @Input() action: () => void;\r\n  constructor() {}\r\n\r\n  ngOnInit() {    \r\n  }  \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9pbWFnZS9pbWFnZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-image\",\r\n  templateUrl: \"./image.component.html\",\r\n  styleUrls: [\"./image.component.scss\"],\r\n})\r\nexport class ImageComponent implements OnInit {\r\n  @Input() url: string;\r\n  @Input() id: string;\r\n  @Input() class: string;\r\n  constructor() {}\r\n\r\n  ngOnInit() {    \r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9wb3N0LWNhcmQvcG9zdC1jYXJkLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-post-card\",\n  templateUrl: \"./post-card.component.html\",\n  styleUrls: [\"./post-card.component.scss\"],\n})\nexport class PostCardComponent implements OnInit {\n  @Input() date: string;\n  @Input() imageSrc: string;\n  @Input() price: number;\n  @Input() title: string;\n  @Input() type: number;\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Injectable } from \"@angular/core\";\nimport { RestService } from \"src/app/core/services/rest.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CityService {\n  constructor(private restService: RestService) {}\n\n  getAll(query: string, token: string) {\n    let url = `cities${\n      undefined != query && null != query && \"\" != query\n        ? `?query=${query}`\n        : ``\n    }`;\n    return this.restService.queryGet(url, token);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9zZWxlY3QtY2l0eS9zZWxlY3QtY2l0eS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from \"@angular/core\";\nimport { ModalController } from \"@ionic/angular\";\nimport { Storage } from \"@ionic/storage\";\nimport { CityService } from \"./city.service\";\nimport { FormGroup, FormControl } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-select-city\",\n  templateUrl: \"./select-city.component.html\",\n  styleUrls: [\"./select-city.component.scss\"],\n})\nexport class SelectCityComponent implements OnInit {\n  private auth: any = \"\";\n  private cities: any[] = [];\n  private query: string = \"\";\n  public searchForm: FormGroup;\n  constructor(\n    private modalController: ModalController,\n    private cityService: CityService,\n    private storage: Storage\n  ) {}\n\n  ngOnInit() {\n    this.storage.get(\"auth\").then((auth) => {\n      this.auth = auth;\n    });\n\n    this.searchForm = new FormGroup({\n      queryControl: new FormControl(\"queryControl\", []),\n    });\n    this.searchForm.controls[\"queryControl\"].setValue(null);\n  }\n\n  dismiss(city: any = undefined) {\n    this.modalController.dismiss({\n      dismissed: true,\n      city: city,\n    });\n  }\n\n  search() {\n    let controls = this.searchForm.controls;\n    this.query = controls[\"queryControl\"].value;\n    if (this.query && this.query.length > 3) {\n      this.getCities();\n    } else {\n      this.cities = [];\n    }\n  }\n\n  getCities() {\n    this.cityService\n      .getAll(this.query, this.auth.token)\n      .toPromise()\n      .then(\n        (res) => {\n          const result = res.json();\n          this.cities = result;\n        },\n        (err) => {\n          let error = JSON.parse(err._body);\n          console.log(error);\n        }\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ImageComponent } from './image/image.component';\r\nimport { CardComponent } from './card/card.component';\r\nimport { PostCardComponent } from './post-card/post-card.component';\r\nimport { SelectCityComponent } from './select-city/select-city.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [CardComponent,PostCardComponent,ImageComponent,SelectCityComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports:[CardComponent,PostCardComponent,ImageComponent,SelectCityComponent]\r\n})\r\nexport class SharedModule { }\r\n"]}