{"version":3,"sources":["webpack:///src/app/login/form/form.page.html","webpack:///src/app/login/form/form.page.scss","webpack:///src/app/login/form/form.page.ts","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts"],"names":["FormPage","loginService","router","storage","usersService","imageUrl","imageId","myForm","email","required","password","controls","setValue","controlName","validationType","control","result","hasError","dirty","touched","invalid","Object","keys","forEach","markAsTouched","body","value","run","toPromise","then","res","json","get","deviceToken","set","user","active","id","name","roles","updateUser","token","err","console","log","error","JSON","parse","_body","update","navigate","selector","template","routes","path","component","LoginRoutingModule","imports","forChild","exports","LoginModule","forRoot","declarations","providers"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYf,QAAaA,QAAQ;AAInB,wBACUC,YADV,EAEUC,MAFV,EAGSC,OAHT,EAIUC,YAJV,EAIoC;AAAA;;AAH1B,aAAAH,YAAA,GAAAA,YAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACD,aAAAC,OAAA,GAAAA,OAAA;AACC,aAAAC,YAAA,GAAAA,YAAA;AACN;;AATe;AAAA;AAAA,mCAWR;AACT,eAAKC,QAAL,GAAgB,kCAAhB;AACA,eAAKC,OAAL,GAAe,WAAf;AACA,eAAKC,MAAL,GAAc,IAAI,wDAAJ,CAAc;AAC1BC,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,OAAhB,EAAyB,CAAC,0DAAWC,QAAZ,CAAzB,CADmB;AAE1BC,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,UAAhB,EAA4B,CAAC,0DAAWD,QAAZ,CAA5B;AAFgB,WAAd,CAAd;AAKA,eAAKF,MAAL,CAAYI,QAAZ,CAAqB,OAArB,EAA8BC,QAA9B,CAAuC,IAAvC;AACA,eAAKL,MAAL,CAAYI,QAAZ,CAAqB,UAArB,EAAiCC,QAAjC,CAA0C,IAA1C;AACD;AArBkB;AAAA;AAAA,wCAuBIC,WAvBJ,EAuByBC,cAvBzB,EAuB+C;AAChE,cAAMC,OAAO,GAAG,KAAKR,MAAL,CAAYI,QAAZ,CAAqBE,WAArB,CAAhB;;AACA,cAAI,CAACE,OAAL,EAAc;AACZ,mBAAO,KAAP;AACD;;AAED,cAAMC,MAAM,GACVD,OAAO,CAACE,QAAR,CAAiBH,cAAjB,MAAqCC,OAAO,CAACG,KAAR,IAAiBH,OAAO,CAACI,OAA9D,CADF;AAGA,iBAAOH,MAAP;AACD;AAjCkB;AAAA;AAAA,gCAmCX;AAAA;;AACN,cAAIL,QAAQ,GAAG,KAAKJ,MAAL,CAAYI,QAA3B;;AACA,cAAI,KAAKJ,MAAL,CAAYa,OAAhB,EAAyB;AACvBC,kBAAM,CAACC,IAAP,CAAYX,QAAZ,EAAsBY,OAAtB,CAA8B,UAACV,WAAD;AAAA,qBAC5BF,QAAQ,CAACE,WAAD,CAAR,CAAsBW,aAAtB,EAD4B;AAAA,aAA9B;AAGA;AACD;;AAED,cAAMC,IAAI,GAAG;AACXjB,iBAAK,EAAEG,QAAQ,CAAC,OAAD,CAAR,CAAkBe,KADd;AAEXhB,oBAAQ,EAAEC,QAAQ,CAAC,UAAD,CAAR,CAAqBe;AAFpB,WAAb;AAKA,eAAKzB,YAAL,CACG0B,GADH,CACOF,IADP,EAEGG,SAFH,GAGGC,IAHH,CAII,UAAOC,GAAP;AAAA,mBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACTd,4BADS,GACAc,GAAG,CAACC,IAAJ,EADA;AAAA;AAEK,6BAAM,KAAK5B,OAAL,CAAa6B,GAAb,CAAiB,aAAjB,CAAN;;AAFL;AAETC,iCAFS;AAGb,2BAAK9B,OAAL,CAAa+B,GAAb,CAAiB,MAAjB,EAAyBlB,MAAzB;AACImB,0BAJS,GAIF;AACTC,8BAAM,EAAEpB,MAAM,CAACoB,MADN;AAETH,mCAAW,EAAEA,WAFJ;AAGTzB,6BAAK,EAAEQ,MAAM,CAACR,KAHL;AAIT6B,0BAAE,EAAErB,MAAM,CAACqB,EAJF;AAKTC,4BAAI,EAAEtB,MAAM,CAACsB,IALJ;AAMTC,6BAAK,EAAEvB,MAAM,CAACuB;AANL,uBAJE;AAYb,2BAAKC,UAAL,CAAgBL,IAAhB,EAAsBnB,MAAM,CAACyB,KAA7B;;AAZa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAf;AAAA,WAJJ,EAkBI,UAACC,GAAD,EAAS;AACPC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,gBAAIG,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWL,GAAG,CAACM,KAAf,CAAZ;AACAL,mBAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,WAtBL;AAwBD;AAzEkB;AAAA;AAAA,mCA2ERpB,IA3EQ,EA2EGgB,KA3EH,EA2EkB;AAAA;;AACnC,eAAKrC,YAAL,CACG6C,MADH,CACUxB,IADV,EACgBgB,KADhB,EAEGb,SAFH,GAGGC,IAHH,CAII,UAAOC,GAAP;AAAA,mBAAe;AAAA;AAAA;AAAA;AAAA;AACb,2BAAK5B,MAAL,CAAYgD,QAAZ,CAAqB,CAAC,YAAD,CAArB;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAf;AAAA,WAJJ,EAOI,UAACR,GAAD,EAAS;AACPC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,gBAAIG,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWL,GAAG,CAACM,KAAf,CAAZ;AACAL,mBAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,WAXL;AAaD;AAzFkB;AAAA;AAAA,8CA2FG;AACpB,eAAK3C,MAAL,CAAYgD,QAAZ,CAAqB,CAAC,yBAAD,CAArB;AACD;AA7FkB;AAAA;AAAA,2CA+FA;AACjB,eAAKhD,MAAL,CAAYgD,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;AAjGkB;;AAAA;AAAA,OAArB;;;;cAK0B;;cACN;;cACA;;cACM;;;;AARblD,YAAQ,6DALpB,gEAAU;AACTmD,cAAQ,EAAE,UADD;AAETC,cAAQ,EAAR;AAAA;AAAA,8FAFS;;;;AAAA,KAAV,CAKoB,GAARpD,QAAQ,CAAR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRb,QAAMqD,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,kBAAkB;AAAA;AAAA,KAA/B;;AAAaA,sBAAkB,6DAJ9B,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAI8B,GAAlBH,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYb,QAAaI,WAAW;AAAA;AAAA,KAAxB;;AAAaA,eAAW,6DAfvB,+DAAS;AACRH,aAAO,EAAE,CACP,0DADO,EAEP,qEAFO,EAGP,wEAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,4DANO,EAOP,kEAPO,EAQP,+EARO,EASP,mEAAmBI,OAAnB,EATO,CADD;AAYRC,kBAAY,EAAE,CAAC,wDAAD,CAZN;AAaRC,eAAS,EAAE,CAAC,4DAAD;AAbH,KAAT,CAeuB,GAAXH,WAAW,CAAX","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-content>\\r\\n  <div id=\\\"container\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col class=\\\"ion-align-self-center\\\" col-8 offset=\\\"2\\\">\\r\\n          <img src=\\\"../../../assets/logo/otoro.png\\\" width=\\\"70%\\\" height=\\\"auto\\\" />\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col col-12>\\r\\n          <h4 class=\\\"no-margin-bottom\\\">Iniciar sesi&oacute;n</h4>\\r\\n          <small>Es genial verte de nuevo</small>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row id=\\\"form-container\\\">\\r\\n        <ion-col col-12>\\r\\n          <form [formGroup]=\\\"myForm\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"bold\\\">Correo electrónico</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control width-100\\\"\\r\\n                formControlName=\\\"email\\\"\\r\\n              />\\r\\n              <span *ngIf=\\\"controlHasError('email', 'required')\\\">\\r\\n                <strong class=\\\"error\\\">Campo requerido</strong>\\r\\n              </span>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"bold\\\">Contraseña</label>\\r\\n              <input\\r\\n                type=\\\"password\\\"\\r\\n                class=\\\"form-control width-100\\\"\\r\\n                formControlName=\\\"password\\\"\\r\\n              />\\r\\n              <span *ngIf=\\\"controlHasError('password', 'required')\\\">\\r\\n                <strong class=\\\"error\\\">Campo requerido</strong>\\r\\n              </span>\\r\\n            </div>\\r\\n            <div class=\\\"display-flex\\\" id=\\\"btn-container\\\">\\r\\n              <ion-button\\r\\n                color=\\\"primary\\\"\\r\\n                (click)=\\\"login()\\\"\\r\\n                class=\\\"margin-center\\\"\\r\\n              >\\r\\n                Ingresar\\r\\n              </ion-button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col col-6>\\r\\n          <small (click)=\\\"goToRecoverPassword()\\\">Olvid&eacute; mi contrase&ntilde;a</small>\\r\\n        </ion-col>\\r\\n        <ion-col col-6 class=\\\"align-text-right\\\">\\r\\n          <small (click)=\\\"goToRegistration()\\\">Registrarme</small>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\";","export default \"#btn-container,\\n#form-container {\\n  margin-top: 5%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vZm9ybS9DOlxcVXNlcnNcXGluZ2RtXFxwcm9qZWN0c1xcb3Rvcm9cXGZyb250L3NyY1xcYXBwXFxsb2dpblxcZm9ybVxcZm9ybS5wYWdlLnNjc3MiLCJzcmMvYXBwL2xvZ2luL2Zvcm0vZm9ybS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUsY0FBYztBQ0NoQiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2Zvcm0vZm9ybS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjYnRuLWNvbnRhaW5lcixcclxuI2Zvcm0tY29udGFpbmVyIHtcclxuICBtYXJnaW4tdG9wOiA1JTtcclxufVxyXG4iLCIjYnRuLWNvbnRhaW5lcixcbiNmb3JtLWNvbnRhaW5lciB7XG4gIG1hcmdpbi10b3A6IDUlO1xufVxuIl19 */\";","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Storage } from \"@ionic/storage\";\r\nimport { LoginService } from \"./login.service\";\r\nimport { UsersService } from \"src/app/users/users.service\";\r\n\r\n@Component({\r\n  selector: \"app-form\",\r\n  templateUrl: \"./form.page.html\",\r\n  styleUrls: [\"./form.page.scss\"],\r\n})\r\nexport class FormPage implements OnInit {\r\n  public myForm: FormGroup;\r\n  public imageUrl: string;\r\n  public imageId: string;\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private router: Router,\r\n    public storage: Storage,\r\n    private usersService: UsersService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.imageUrl = \"../../assets/logo/otoro-logo.png\";\r\n    this.imageId = \"top-image\";\r\n    this.myForm = new FormGroup({\r\n      email: new FormControl(\"email\", [Validators.required]),\r\n      password: new FormControl(\"password\", [Validators.required]),\r\n    });\r\n\r\n    this.myForm.controls[\"email\"].setValue(null);\r\n    this.myForm.controls[\"password\"].setValue(null);\r\n  }\r\n\r\n  public controlHasError(controlName: string, validationType: string): boolean {\r\n    const control = this.myForm.controls[controlName];\r\n    if (!control) {\r\n      return false;\r\n    }\r\n\r\n    const result =\r\n      control.hasError(validationType) && (control.dirty || control.touched);\r\n\r\n    return result;\r\n  }\r\n\r\n  login() {\r\n    let controls = this.myForm.controls;\r\n    if (this.myForm.invalid) {\r\n      Object.keys(controls).forEach((controlName) =>\r\n        controls[controlName].markAsTouched()\r\n      );\r\n      return;\r\n    }\r\n\r\n    const body = {\r\n      email: controls[\"email\"].value,\r\n      password: controls[\"password\"].value,\r\n    };\r\n\r\n    this.loginService\r\n      .run(body)\r\n      .toPromise()\r\n      .then(\r\n        async (res) => {\r\n          let result = res.json();\r\n          let deviceToken = await this.storage.get(\"deviceToken\");\r\n          this.storage.set(\"auth\", result);\r\n          let user = {\r\n            active: result.active,\r\n            deviceToken: deviceToken,\r\n            email: result.email,\r\n            id: result.id,\r\n            name: result.name,\r\n            roles: result.roles,\r\n          };\r\n          this.updateUser(user, result.token);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          let error = JSON.parse(err._body);\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  updateUser(body: any, token: string) {\r\n    this.usersService\r\n      .update(body, token)\r\n      .toPromise()\r\n      .then(\r\n        async (res) => {\r\n          this.router.navigate([\"/dashboard\"]);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          let error = JSON.parse(err._body);\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  goToRecoverPassword() {\r\n    this.router.navigate([\"/users/recover-password\"]);\r\n  }\r\n\r\n  goToRegistration() {\r\n    this.router.navigate([\"/users/register\"]);\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { FormPage } from \"./form/form.page\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: FormPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { LoginRoutingModule } from \"./login-routing.module\";\r\nimport { SharedModule } from \"../shared/shared.module\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { FormPage } from \"./form/form.page\";\r\nimport { DashboardPageModule } from \"../dashboard/dashboard.module\";\r\nimport { HTTP } from \"@ionic-native/http/ngx\";\r\nimport { IonicStorageModule } from '@ionic/storage';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    HttpClientModule,\r\n    LoginRoutingModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    SharedModule,\r\n    DashboardPageModule,\r\n    IonicStorageModule.forRoot(),\r\n  ],\r\n  declarations: [FormPage],\r\n  providers: [HTTP],\r\n})\r\nexport class LoginModule {}\r\n"]}